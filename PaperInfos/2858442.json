{"paperId":2858442,"citation":[],"abstract":"Exploring source code history is an important task for software maintenance. Traditionally, source code history is navigated on the granularity of individual files. This is not fine-grained enough to support users in exploring the evolution of individual code elements. We suggest to consider the history of individual elements within the tree structure inherent to source code. A history graph created from these trees then enables new ways to explore events of interest defined by structural changes in the source code. We present Tree Flow, a visualization of these structural changes designed to enable users to choose the appropriate level of detail for the task at hand. In a user study, we show that both Chronicler and the history aware timeline, two prototype systems combining history graph navigation with a traditional source code view, outperform the more traditional history navigation on a file basis and users strongly prefer Chronicler for the exploration of source code.","reference":[{"content":"Fanny Chevalier, David Auber, and Alexandru Telea. 2007. Structural Analysis and Visualization of C++ Code Evolution Using Syntax Trees. In IWPSE '07: International Workshop on Principles of Software Evolution. 90-97.","paperID":"None"},{"content":"Weiwei Cui, Shixia Liu, Li Tan, Conglei Shi, Yangqiu Song, Zekai Gao, Huamin Qu, and Xin Tong. 2011. TextFlow: Towards Better Understanding of Evolving Topics in Text. IEEE Transactions on Visualization and Computer Graphics 17, 12 (2011), 2412-2421.","paperID":"None"},{"content":"Stephen G. Eick, Joseph L. Steffen, and Eric E. Sumner Jr. 1992. Seesoft--A Tool for Visualizing Line Oriented Software Statistics. IEEE Transactions on Software Engineering 18, 11 (1992), 957-968.","paperID":"None"},{"content":"Shiry Ginosar, Luis Fernando De Pombo, Maneesh Agrawala, and Björn Hartmann. 2013. Authoring Multi-Stage Code Examples with Editable Code Histories. In UIST '13: Proceedings of the 26th annual ACM symposium on User Interface Software and Technology. 485-494.","paperID":"None"},{"content":"Tovi Grossman, Justin Matejka, and George Fitzmaurice. 2010. Chronicle: Capture, Exploration, and Playback of Document Workflow Histories. In UIST '10: Proceedings of the annual ACM symposium on User Interface Software and Technology. 143-152.","paperID":"None"},{"content":"Björn Hartmann, Mark Dhillon, and Matthew K. Chan. 2011. HyperSource: Bridging the Gap Between Source and Code-Related Web Sites. In CHI '11: Proceedings of the annual conference on Human Factors in Computing Systems. 2207-2210.","paperID":"None"},{"content":"Reid Holmes and Andrew Begel. 2008. Deep Intellisense: A Tool for Rehydrating Evaporated Information. In MSR '08: Proceedings of the International Working Conference on Mining Software Repositories.","paperID":"None"},{"content":"Huzefa Kagdi, Maen Hammad, and Jonathan I. Maletic. 2008. Who Can Help Me with This Source Code Change?. In ICSM '08: IEEE International Conference on Software Maintenance. 157-166.","paperID":"None"},{"content":"Thomas D. LaToza and Brad A. Myers. 2010. Hard-to-Answer Questions About Code. PLATEAU '10: Evaluation and Usability of Programming Languages and Tools (2010).","paperID":"None"},{"content":"Thomas D. LaToza, Gina Venolia, and Robert DeLine. 2006. Maintaining Mental Models: A Study of Developer Work Habits. In ICSE '06: Proceedings of the 28th international conference on Software Engineering. 492-501.","paperID":"None"},{"content":"Petra Neumann, Stefan Schlechtweg, and Sheelagh Carpendale. 2005. ArcTrees: Visualizing Relations in Hierarchical Data. In EUROVIS'05: Proceedings of the joint Eurographics / IEEE VGTC conference on Visualization. 53-60.","paperID":"None"},{"content":"Michael Ogawa and Kwan-Liu Ma. 2010. Software Evolution Storylines. In SOFTVIS '10 Proceedings of the 5th international symposium on Software Visualization. 35-42.","paperID":"None"},{"content":"Stuart Rose, Scott Butner, Wendy Cowley, Michelle Gregory, and Julia Walker. 2009. Describing Story Evolution From Dynamic Information Streams.","paperID":"None"},{"content":"Francisco Servant and James A. Jones. 2013. Chronos: Visualizing Slices of Source-Code History. In VISSOFT '13: Proceedings of IEEE Working Conference on Software Visualization. 1-4.","paperID":"None"},{"content":"Ross Shannon, Aaron Quigley, and Paddy Nixon. 2010. Deep Diffs: Visually Exploring the History of a Document. In AVI '10: Proceedings of the international Conference on Advanced Visual Interfaces.","paperID":"None"},{"content":"Alexandru Telea and David Auber. 2008. Code Flows: Visualizing Structural Evolution of Source Code. Computer Graphics Forum 27, 3 (2008), 831-838.","paperID":"None"},{"content":"Fernanda B. Viégas, Martin Wattenberg, and Kushal Dave. 2004. Studying Cooperation and Conflict Between Authors with History Flow Visualizations. In CHI '04: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. 575-582.","paperID":"None"},{"content":"A. T. T. Ying, G. C. Murphy, R. Ng, and M. C. Chu-Carroll. 2004. Predicting Source Code Changes by Mining Change History. IEEE Transactions on Software Engineering 30, 9 (2004), 574-586.","paperID":"None"},{"content":"YoungSeok Yoon and Brad A. Myers. 2015. Semantic Zooming of Code Change History. In VL/HCC '15: IEEE Symposium on Visual Languages and Human-Centric Computing.","paperID":"None"},{"content":"YoungSeok Yoon, Brad A. Myers, and Sebon Koo. 2013. Visualization of Fine-grained Code Change History. In VL/HCC '13: IEEE Symposium on Visual Languages and Human-Centric Computing. 119-126.","paperID":"None"},{"content":"T. Zimmermann, P. Weibgerber, S. Diehl, and A. Zeller. 2004. Mining Version Histories to Guide Software Changes. In Software Engineering, 2004. ICSE 2004. Proceedings. 26th International Conference on. 563-572.","paperID":"None"}],"title":"Chronicler: Interactive Exploration of Source Code History","filename":"CHI16/p3522","authors":["Moritz Wittenhagen","Christian Cherek","Jan Borchers"],"conference":"CHI '16"}