{"paperId":2557350,"citation":[],"reference":[{"content":"Linden J. Ball , Thomas C. Ormerod, Structured and opportunistic processing in design: a critical discussion, International Journal of Human-Computer Studies, v.43 n.1, p.131-151, July 1995","paperID":"210931"},{"content":"J. Bonar and B. Liffick. A visual programming language for novices. Technical report, 1987.","paperID":"None"},{"content":"Jeffrey Bonar , Elliot Soloway, Preprogramming knowledge: a major source of misconceptions in novice programmers, Human-Computer Interaction, v.1 n.2, p.133-161, June 1985","paperID":"1453766"},{"content":"Benedict Du Boulay , Tim O'Shea , John Monk, The black box inside the glass box: presenting computing concepts to novices, International Journal of Human-Computer Studies, v.51 n.2, p.265-277, Aug. 1999","paperID":"330393"},{"content":"Bryan M. Cantrill , Michael W. Shapiro , Adam H. Leventhal, Dynamic instrumentation of production systems, Proceedings of the annual conference on USENIX Annual Technical Conference, p.2-2, June 27-July 02, 2004, Boston, MA","paperID":"1247417"},{"content":"T Casavant. Tools and Methods for Visualization of Parallel Systems and Computations Guest Editors Introduction, June 1993.","paperID":"None"},{"content":"J. Gould; P. Drongowski. An Exploratory Study of Computer Program Debugging. Human Factors, 16:258--277, 1974.","paperID":"None"},{"content":"Ryan Eccles , Deborah A. Stacey, Understanding the Parallel Programmer, Proceedings of the 20th International Symposium on High-Performance Computing in an Advanced Collaborative Environment, p.12, May 14-17, 2006","paperID":"1136120"},{"content":"Vikki Fix , Susan Wiedenbeck , Jean Scholtz, Mental representations of programs by novices and experts, Proceedings of the INTERACT '93 and CHI '93 Conference on Human Factors in Computing Systems, p.74-79, April 24-29, 1993, Amsterdam, The Netherlands","paperID":"169088"},{"content":"Thomas Fritz , Gail C. Murphy, Using information fragments to answer the questions developers ask, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, May 01-08, 2010, Cape Town, South Africa","paperID":"1806828"},{"content":"Jason Gait, A probe effect in concurrent programs, Software—Practice & Experience, v.16 n.3, p.225-233, March 1986","paperID":"5440"},{"content":"D.R. Goldenson and B.J. Wang. Use of Structure Editing Tools by Novice Programmers. In Empirical Studies of Programming: Fourth Work, pages 99--120, 1991.","paperID":"None"},{"content":"T R G Green and M Petre. Usability Analysis of Visual Programming Environments: A 'Cognitive Dimensions' Framework. Journal of Visual Languages and Computing, 7(2):131--174, 1996.","paperID":"None"},{"content":"L. Gugerty , G. Olson, Debugging by skilled and novice programmers, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, p.171-174, April 13-17, 1986, Boston, Massachusetts, USA","paperID":"22367"},{"content":"H. Sutter. Understanding Parallel Performance. Dr. Dobb's Journal, 2008.","paperID":"None"},{"content":"Jo Erskine Hannay , Carolyn MacLeod , Janice Singer , Hans Petter Langtangen , Dietmar Pfahl , Greg Wilson, How do scientists develop and use scientific software?, Proceedings of the 2009 ICSE Workshop on Software Engineering for Computational Science and Engineering, p.1-8, May 23-23, 2009","paperID":"1556928"},{"content":"Michael T. Heath , Jennifer A. Etheridge, Visualizing the Performance of Parallel Programs, IEEE Software, v.8 n.5, p.29-39, September 1991","paperID":"625093"},{"content":"Lorin Hochstein and Jeff Carver. Parallel programmer productivity: A case study of novice parallel programmers. High Performance Networking and Computing, pages 1--9, 2005.","paperID":"None"},{"content":"Peter J. Kammer , Gregory Alan Bolcer , Richard N. Taylor , Arthur S. Hitomi , Mark Bergman, Techniques for Supporting Dynamic and Adaptive Workflow, Computer Supported Cooperative Work, v.9 n.3-4, p.269-292, Aug. 2000","paperID":"350206"},{"content":"Andrew J. Ko , Brad A. Myers , Michael J. Coblenz , Htet Htet Aung, An Exploratory Study of How Developers Seek, Relate, and Collect Relevant Information during Software Maintenance Tasks, IEEE Transactions on Software Engineering, v.32 n.12, p.971-987, December 2006","paperID":"1248780"},{"content":"Jürgen Koenemann , Scott P. Robertson, Expert problem solving strategies for program comprehension, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, p.125-130, April 27-May 02, 1991, New Orleans, Louisiana, USA","paperID":"108863"},{"content":"Thomas D. LaToza , Brad A. Myers, Hard-to-answer questions about code, Evaluation and Usability of Programming Languages and Tools, p.1-6, October 17-21, 2010, Reno, Nevada","paperID":"1937125"},{"content":"Joseph Lawrance , Christopher Bogart , Margaret Burnett , Rachel Bellamy , Kyle Rector , Scott D. Fleming, How Programmers Debug, Revisited: An Information Foraging Theory Perspective, IEEE Transactions on Software Engineering, v.39 n.2, p.197-215, February 2013","paperID":"2478703"},{"content":"Carol H. LeDoux , D. Stott Parker, Jr., Saving traces for Ada debugging, ACM SIGAda Ada Letters, v.V n.2, p.97-108, Sep., Oct. 1985","paperID":"324385"},{"content":"M. Luff. Empirically investigating parallel programming paradigms: A null result. Usability of Programming Languages and Tools, (October), 2009.","paperID":"None"},{"content":"Tim Mattson , Michael Wrinn, Parallel programming: can we PLEASE get it right this time?, Proceedings of the 45th annual Design Automation Conference, June 08-13, 2008, Anaheim, California","paperID":"1391474"},{"content":"Richard E. Mayer, The Psychology of How Novices Learn Computer Programming, ACM Computing Surveys (CSUR), v.13 n.1, p.121-141, March 1981","paperID":"356841"},{"content":"R. McCauley, S. Fitzgerald, G. Lewandowski, L. Murphy, B. Simon, L. Thomas, and C. Zander. Debugging: a review of the literature from an educational perspective. Computer Science Education, 18(2):67--92, June 2008.","paperID":"None"},{"content":"P.E. McKenney, M. Gupta, M.M. Michael, Phil Howard, Joshua Triplett, and Jonathan Walpole. Is parallel programming hard, and if so, why' Control, 2002.","paperID":"None"},{"content":"Barton P. Miller , Mark D. Callaghan , Jonathan M. Cargille , Jeffrey K. Hollingsworth , R. Bruce Irvin , Karen L. Karavanic , Krishna Kunchithapadam , Tia Newhall, The Paradyn Parallel Performance Measurement Tool, Computer, v.28 n.11, p.37-46, November 1995","paperID":"620350"},{"content":"MJ Muller and S. Kogan. Grounded theory method in HCI and CSCW. Cambridge: IBM Center for Social Software, pages 1--46, 2010.","paperID":"None"},{"content":"C. M. Pancake , S. Utter, Models for visualization in parallel debuggers, Proceedings of the 1989 ACM/IEEE conference on Supercomputing, p.627-636, November 12-17, 1989, Reno, Nevada, USA","paperID":"76334"},{"content":"J Pane and B Myers. Usability issues in the design of novice programming systems. Technical Report August, 1996.","paperID":"None"},{"content":"David J. Piorkowski , Scott D. Fleming , Irwin Kwan , Margaret M. Burnett , Christopher Scaffidi , Rachel K.E. Bellamy , Joshua Jordahl, The whats and hows of programmers' foraging diets, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, April 27-May 02, 2013, Paris, France","paperID":"2466418"},{"content":"Peter Pirolli , Stuart Card, Information foraging in information access environments, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, p.51-58, May 07-11, 1995, Denver, Colorado, USA","paperID":"223911"},{"content":"Prakash Prabhu , Thomas B. Jablin , Arun Raman , Yun Zhang , Jialu Huang , Hanjun Kim , Nick P. Johnson , Feng Liu , Soumyadeep Ghosh , Stephen Beard , Taewook Oh , Matthew Zoufaly , David Walker , David I. August, A survey of the practice of computational science, State of the Practice Reports, November 12-18, 2011, Seattle, Washington","paperID":"2063374"},{"content":"Scott Douglas Fleming , R. E. Stirewalt, Successful strategies for debugging concurrent software: an empirical investigation, Michigan State University, East Lansing, MI, 2009","paperID":"1751506"},{"content":"Caitlin Sadowski , Andrew Shewmaker, The last mile: parallel programming and usability, Proceedings of the FSE/SDP workshop on Future of software engineering research, November 07-08, 2010, Santa Fe, New Mexico, USA","paperID":"1882426"},{"content":"Jonathan Sillito , Gail C. Murphy , Kris De Volder, Questions programmers ask during software evolution tasks, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering, November 05-11, 2006, Portland, Oregon, USA","paperID":"1181779"},{"content":"S Siu, M De Simone, D Goswami, and A Singh. Design Patterns for Parallel Programming. PDPTA, 1996.","paperID":"None"},{"content":"David Canfield Smith , Allen Cypher , Jim Spohrer, KidSim: programming agents without a programming language, Communications of the ACM, v.37 n.7, p.54-67, July 1994","paperID":"176795"},{"content":"A.L Strauss and J. Corbin. Basics of Qualitative Research: Techniques and Procedures for Developing Grounded Theory. Sage, 2nd edition, 1998.","paperID":"None"},{"content":"I Vessey, Expertise in debugging computer programs: an analysis of the content of verbal protocols, IEEE Transactions on Systems, Man and Cybernetics, v.16 n.5, p.621-637, Sept./Oct. 1986","paperID":"10469"}],"abstract":"In recent years there has been a shift in microprocessor manufacture from building single-core processors towards providing multiple cores on the same chip. This shift has meant that a much wider population of developers are faced with the task of developing parallel software: a difficult, time consuming and expensive process. With the aim of identifying issues, emerging practices and design opportunities for support, we present in this paper a qualitative study in which we interviewed a range of software developers, in both industry and academia. We then perform a systematic analysis of the data and identify several cross-cutting themes. These analysis themes include the practical relevance of the probe effect, the significance of orchestration models in development and the mismatch between currently available tools and developers' needs. We also identify an important characteristic of parallel programming, where the process of optimisation goes hand in hand with the process of debugging, as opposed to clearer distinctions which may be made in traditional programming. We conclude with reflection on how the study can inform the design of software tools to support developers in the endeavour of parallel programming.","video":"http://www.youtube.com/embed/QLeSXZXcOsY?rel=0","title":"Design considerations for parallel performance tools","filename":"CHI14/p2501","authors":["Roman Atachiants","David Gregg","Kim Jarvis","Gavin Doherty"],"conference":"CHI '14"}