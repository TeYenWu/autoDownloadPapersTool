{"paperId":2858512,"reference":[{"content":"Mark S Ackerman. 1998. Augmenting organizational memory: a field study of answer garden. ACM Transactions on Information Systems (TOIS) 16, 3 (1998), 203--224.","paperID":"None"},{"content":"Mark S Ackerman and David W McDonald. 1996. Answer Garden 2: merging organizational memory with collaborative help. In Proceedings of the 1996 ACM conference on Computer supported cooperative work. ACM, 97--105.","paperID":"None"},{"content":"Thomas J Allen. 1984. Managing the flow of technology: Technology transfer and the dissemination of technological information within the R&D organization. MIT Press Books 1 (1984).","paperID":"None"},{"content":"Muhammad Asaduzzaman, Ahmed Shah Mashiyat, Chanchal K Roy, and Kevin A Schneider. 2013. Answering questions about unanswered questions of stack overflow. In Proceedings of the 10th Working Conference on Mining Software Repositories. IEEE Press, 97--100.","paperID":"None"},{"content":"Prashant Baheti, Edward Gehringer, and David Stotts. 2002. Exploring the efficacy of distributed pair programming. In Extreme Programming and Agile MethodsXP/Agile Universe 2002. Springer, 208--220.","paperID":"None"},{"content":"Michael S Bernstein, Joel Brandt, Robert C Miller, and David R Karger. 2011. Crowds in two seconds: Enabling realtime crowd-powered interfaces. In Proceedings of the 24th annual ACM symposium on User interface software and technology. ACM, 33--42.","paperID":"None"},{"content":"Jeffrey P Bigham, Chandrika Jayant, Hanjie Ji, Greg Little, Andrew Miller, Robert C Miller, Robin Miller, Aubrey Tatarowicz, Brandyn White, Samual White, and others. 2010. VizWiz: nearly real-time answers to visual questions. In Proceedings of the 23nd annual ACM symposium on User interface software and technology. ACM, 333--342.","paperID":"None"},{"content":"Joel Brandt, Mira Dontcheva, Marcos Weskamp, and Scott R Klemmer. 2010. Example-centric programming: integrating web search into the development environment. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 513--522.","paperID":"None"},{"content":"Joel Brandt, Philip J Guo, Joel Lewenstein, Mira Dontcheva, and Scott R Klemmer. 2009a. Two studies of opportunistic programming: interleaving web foraging, learning, and writing code. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 1589--1598.","paperID":"None"},{"content":"Joel Brandt, Philip J Guo, Joel Lewenstein, Scott R Klemmer, and Mira Dontcheva. 2009b. Writing Code to Prototype, Ideate, and Discover. Software, IEEE 26, 5 (2009), 18--24.","paperID":"None"},{"content":"Frederick P Brooks. 1975. The mythical man-month. Vol. 1995. Addison-Wesley Reading, MA.","paperID":"None"},{"content":"Alistair Cockburn and Laurie Williams. 2000. The costs and benefits of pair programming. Extreme programming examined (2000), 223--247.","paperID":"None"},{"content":"Philip R Cohen. 1992. The role of natural language in a multimodal interface. In Proceedings of the 5th annual ACM symposium on User interface software and technology. ACM, 143--149.","paperID":"None"},{"content":"Upwork Inc. (formerly oDesk). 2015. Upwork. (2015). https://www.upwork.com Accessed: September, 2015.","paperID":"None"},{"content":"Max Goldman, Greg Little, and Robert C Miller. 2011. Real-time collaborative coding in a web IDE. In Proceedings of the 24th annual ACM symposium on User interface software and technology. ACM, 155--164.","paperID":"None"},{"content":"Philip J Guo. 2015. Codeopticon: Real-Time, One-To-Many Human Tutoring for Computer Programming. In Proceedings of the 28th annual ACM symposium on User interface software and technology. ACM.","paperID":"None"},{"content":"Philip J Guo, Jeffery White, and Renan Zanelatto. 2015. Codechella: Multi-User Program Visualizations for Real-Time Tutoring and Collaborative Learning. In Visual Languages and Human-Centric Computing (VL/HCC), 2015 IEEE Symposium on. IEEE.","paperID":"None"},{"content":"Anja Guzzi, Alberto Bacchelli, Yann Riche, and Arie van Deursen. 2015. Supporting Developers' Coordination in the IDE. In Proceedings of the 18th ACM Conference on Computer Supported Cooperative Work & Social Computing. ACM, 518--532.","paperID":"None"},{"content":"Bjorn Hartmann, Daniel MacDougall, Joel Brandt, and Scott R Klemmer. 2010. What would other programmers do: suggesting solutions to error messages. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 1019--1028.","paperID":"None"},{"content":"James D Herbsleb, Helen Klein, Gary M Olson, Hans Brunner, Judith S Olson, and Joe Harding. 1995. Object-oriented analysis and design in software project teams. Human-Computer Interaction 10, 2-3 (1995), 249--292.","paperID":"None"},{"content":"Damon Horowitz and Sepandar D Kamvar. 2010. The anatomy of a large-scale social search engine. In Proceedings of the 19th international conference on World wide web. ACM, 431--440.","paperID":"None"},{"content":"Codenvy Inc. 2012. Codenvy. (2012). https://codenvy.com Accessed: September, 2015.","paperID":"None"},{"content":"Codementor Inc. 2014. Code Mentor. (2014). https://codementor.io/ Accessed: September, 2015.","paperID":"None"},{"content":"Cloud9 IDE Inc. 2010. Cloud9 IDE. (2010). https://c9.io Accessed: September, 2015.","paperID":"None"},{"content":"Pluralsight Inc. 2013. hack.hands(). (2013). https://hackhands.com/ Accessed: September, 2015.","paperID":"None"},{"content":"Andrew J Ko, Robert DeLine, and Gina Venolia. 2007. Information needs in collocated software development teams. In Proceedings of the 29th international conference on Software Engineering. IEEE Computer Society, 344--353.","paperID":"None"},{"content":"Andrew J Ko, Brad Myers, Htet Htet Aung, and others. 2004. Six learning barriers in end-user programming systems. In Visual Languages and Human Centric Computing, 2004 IEEE Symposium on. IEEE, 199--206.","paperID":"None"},{"content":"Walter S Lasecki, Mitchell Gordon, Danai Koutra, Malte F Jung, Steven P Dow, and Jeffrey P Bigham. 2014. Glance: Rapidly coding behavioral video with the crowd. In Proceedings of the 27th annual ACM symposium on User interface software and technology. ACM, 551--562.","paperID":"None"},{"content":"Walter S Lasecki, Juho Kim, Nicholas Rafter, Onkur Sen, Jeffrey P Bigham, and Michael S Bernstein. Apparition: Crowdsourced User Interfaces That Come To Life As You Sketch Them. In Proceedings of the 33rd Annual ACM Conference on Human Factors in Computing Systems. ACM, 1925--1934.","paperID":"None"},{"content":"Walter S Lasecki, Jaime Teevan, and Ece Kamar. 2014. Information extraction and manipulation threats in crowd-powered systems. In Proceedings of the 17th ACM conference on Computer supported cooperative work & social computing. ACM, 248--256.","paperID":"None"},{"content":"Walter S Lasecki, Rachel Wesley, Jeffrey Nichols, Anand Kulkarni, James F Allen, and Jeffrey P Bigham. 2013. Chorus: a crowd-powered conversational assistant. In Proceedings of the 26th annual ACM symposium on User interface software and technology. ACM, 151--162.","paperID":"None"},{"content":"Thomas D LaToza, W Ben Towne, Christian M Adriano, and Andre van der Hoek. 2014. Microtask programming: Building software with a crowd. In Proceedings of the 27th annual ACM symposium on User interface software and technology. ACM, 43--54.","paperID":"None"},{"content":"Greg Little and Yu an Sun. 2011. Human OCR: Insights from a complex human computation process. In Workshop on Crowdsourcing and Human Computation, Services, Studies and Platforms, ACM CHI.","paperID":"None"},{"content":"Greg Little, Lydia B Chilton, Max Goldman, and Robert C Miller. 2010. Turkit: human computation algorithms on mechanical turk. In Proceedings of the 23nd annual ACM symposium on User interface software and technology. ACM, 57--66.","paperID":"None"},{"content":"Rajan M Lukose, Eytan Adar, Joshua R Tyler, and Caesar Sengupta. 2003. Shock: communicating with computational messages and automatic private profiles. In Proceedings of the 12th international conference on World Wide Web. ACM, 291--300.","paperID":"None"},{"content":"Lena Mamykina, Bella Manoim, Manas Mittal, George Hripcsak, and Bjorn Hartmann. 2011. Design lessons from the fastest q&a site in the west. In Proceedings of the SIGCHI conference on Human factors in computing systems. ACM, 2857--2866.","paperID":"None"},{"content":"David W McDonald and Mark S Ackerman. 2000. Expertise recommender: a flexible recommendation system and architecture. In Proceedings of the 2000 ACM conference on Computer supported cooperative work. ACM, 231--240.","paperID":"None"},{"content":"Harlan D Mills. 1980. Software engineering education. Proc. IEEE 68, 9 (1980), 1158--1162.","paperID":"None"},{"content":"Audris Mockus and James D Herbsleb. 2002. Expertise browser: a quantitative approach to identifying expertise. In Proceedings of the 24th international conference on software engineering. ACM, 503--512.","paperID":"None"},{"content":"Gary M. Olson and Judith S. Olson. 2000. Distance Matters. Human-computer interaction 15, 2 (2000), 139--178.","paperID":"None"},{"content":"Stack Overflow. 2015. Stack Overflow. (2015). https://stackoverflow.com/ Accessed: September, 2015.","paperID":"None"},{"content":"Maria Soledad Pera and Yiu-Kai Ng. 2011. A community question-answering refinement system. In Proceedings of the 22nd ACM conference on Hypertext and hypermedia. ACM, 251--260.","paperID":"None"},{"content":"Daniela Retelny, Sebastien Robaszkiewicz, Alexandra To, Walter S Lasecki, Jay Patel, Negar Rahmati, Tulsee Doshi, Melissa Valentine, and Michael S Bernstein. 2014. Expert crowdsourcing with flash teams. In Proceedings of the 27th annual ACM symposium on User interface software and technology. ACM, 75--85.","paperID":"None"},{"content":"Fatemeh Riahi, Zainab Zolaktaf, Mahdi Shafiei, and Evangelos Milios. 2012. Finding expert users in community question answering. In Proceedings of the 21st international conference companion on World Wide Web. ACM, 791--798.","paperID":"None"},{"content":"Martin P Robillard, Robert J Walker, and Thomas Zimmermann. 2010. Recommendation systems for software engineering. Software, IEEE 27, 4 (2010), 80--86.","paperID":"None"},{"content":"Julia Schenk, Lutz Prechelt, and Stephan Salinger. 2014. Distributed-Pair Programming can work well and is not just Distributed Pair-Programming. In Companion Proceedings of the 36th International Conference on Software Engineering. ACM, 74--83.","paperID":"None"},{"content":"Rita Shewbridge, Amy Hurst, and Shaun K Kane. 2014. Everyday making: identifying future uses for 3D printing in the home. In Proceedings of the 2014 conference on Designing interactive systems. ACM, 815--824.","paperID":"None"},{"content":"Jonathan Sillito, Gail C Murphy, and Kris De Volder. 2008. Asking and answering questions during a programming change task. Software Engineering, IEEE Transactions on 34, 4 (2008), 434--451.","paperID":"None"},{"content":"Devrim Yasar Sinan Yasar. 2012. Koding. (2012). https://koding.com Accessed: September, 2015.","paperID":"None"},{"content":"Igor Steinmacher, Marco Aurelio Graciotto Silva, and Marco Aurelio Gerosa. 2014. Barriers faced by newcomers to open source projects: a systematic review. In Open Source Software: Mobile Open Source Technologies. Springer, 153--163.","paperID":"None"},{"content":"Laurie Williams and Robert Kessler. 2002. Pair programming illuminated. Addison-Wesley Longman Publishing Co., Inc.","paperID":"None"}],"citation":[],"abstract":"Software development is an expert task that requires complex reasoning and the ability to recall language or API-specific details. In practice, developers often seek support from IDE tools, Web resources, or other developers to help fill in gaps in their knowledge on-demand. In this paper, we present two studies that seek to inform the design of future systems that use remote experts to support developers on demand. The first explores what types of questions developers would ask a hypothetical assistant capable of answering any question they pose. The second study explores the interactions between developers and remote experts in supporting roles. Our results suggest eight key system features needed for on-demand remote developer assistants to be effective, which has implications for future human-powered development tools.","title":"Towards Providing On-Demand Expert Support for Software Developers","filename":"CHI16/p3192","authors":["Yan Chen","Steve Oney","Walter S. Lasecki"],"conference":"CHI '16"}